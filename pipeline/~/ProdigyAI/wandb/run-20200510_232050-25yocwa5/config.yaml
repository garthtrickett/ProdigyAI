wandb_version: 1

_wandb:
  desc: null
  value:
    cli_version: 0.8.35
    code_path: code/pipeline/preprocessing.py
    framework: torch
    is_jupyter_run: true
    is_kaggle_kernel: false
    python_version: 3.7.6
params:
  desc: null
  value:
    cusum_filter_volume_modifier:
      desc: null
      value: 500
    filter_type:
      desc: Event filter type
      value: none
    head:
      desc: Take the first n values of dataframes. If it equals zero take the entire
        df
      value: 1000
    input_type:
      desc: Whether to use orderbook data, trade ticks, time bars etc
      value: orderbook
    minimum_return:
      desc: Amount of return chosen to consider it a profitable trade
      value: 0.001 * 1 / 23
    profit_taking_multiplier:
      desc: Vertical Barrier profit taking multiplier
      value: 1
    scaling_maximum:
      desc: null
      value: 1
    scaling_minimum:
      desc: null
      value: -1
    scaling_type:
      desc: Whether to use normalization/standardization/rolling stand etc
      value: z_score
    stop_loss_multiplier:
      desc: Vertical Barrier profit taking multiplier
      value: 1
    use_fractional_differentiation:
      desc: null
      value: false
    use_sample_weights:
      desc: null
      value: false
    vertical_barrier_seconds:
      desc: Length of the labelling window
      value: round(1 / 2, 3)
    vol_max_modifier:
      desc: How much extra profit above minimum return required in the face of max
        volatility
      value: 2.0e-08
    vol_min_modifier:
      desc: How much profit above minimum return required in the face of min volatility
      value: 1.0e-08
    window_length:
      desc: Length of the input feature window
      value: 200
yaml:
  desc: null
  value: ../yaml/preprocessing.yaml
